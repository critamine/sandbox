name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

permissions: read-all

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@85e6279cec87321a52edac9c87bce653a07cf6c2

      - uses: actions/setup-python@d0b4fc497a1daddb64da40799d80949aa3a0c559
        with:
          python-version: '3.11'
          cache: 'pip'
          cache-dependency-path: '**/pyproject.toml'

      - name: Install dependencies
        run: pip install --require-hashes -r requirements-dev.txt
          
      - name: Lint Python code
        run: pylint --fail-under=8 src/

      - name: Lint Dockerfile
        uses: hadolint/hadolint-action@d292784f8f3eacda47060b259a580467b0ba410c
        with:
          dockerfile: Dockerfile

  security-scan:
    permissions:
      security-events: write
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@85e6279cec87321a52edac9c87bce653a07cf6c2

      - name: Trivy Setup
        uses: aquasecurity/setup-trivy@ff1b8b060f23b650436d419b5e13f67f5d4c3087
        with:
          cache: true
          version: v0.59.0

      - name: Trivy repo mode scan
        uses: aquasecurity/trivy-action@18f2510ee396bbf400402947b394f2dd8c87dbb0
        with:
          scan-type: 'fs'
          scanners: 'vuln,secret,misconfig'
          format: 'sarif'
          ignore-unfixed: true
          output: 'trivy-results.sarif'
          severity: 'CRITICAL'
          skip-setup-trivy: true

      - name: Upload Trivy scan results to GitHub security
        uses: github/codeql-action/upload-sarif@7e3036b9cd87fc26dd06747b7aa4b96c27aaef3a
        with:
          sarif_file: trivy-results.sarif

      - name: Fail build on Critical Trivy issues
        uses: aquasecurity/trivy-action@18f2510ee396bbf400402947b394f2dd8c87dbb0
        with:
          scan-type: "fs"
          format: table
          scan-ref: .
          severity: CRITICAL
          ignore-unfixed: true
          exit-code: 1
          skip-setup-trivy: true

  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@85e6279cec87321a52edac9c87bce653a07cf6c2

      - uses: actions/setup-python@d0b4fc497a1daddb64da40799d80949aa3a0c559
        with:
          python-version: '3.11'
          cache: 'pip'
          cache-dependency-path: '**/pyproject.toml'

      - name: Install dependencies
        run: pip install --require-hashes -r requirements-dev.txt

      - name: Run unit tests
        run: |
          PYTHONPATH=$PYTHONPATH:$(pwd)/src pytest src/tests

  sonarqube:
    runs-on: ubuntu-latest
    needs: [test]
    steps:
      - uses: actions/checkout@85e6279cec87321a52edac9c87bce653a07cf6c2
        with:
          fetch-depth: 0

      - name: SonarQube Scan
        uses: sonarsource/sonarqube-scan-action@bfd4e558cda28cda6b5defafb9232d191be8c203
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

      - name: SonarQube Quality Gate check
        id: sonarqube-quality-gate-check
        uses: sonarsource/sonarqube-quality-gate-action@5a8df806f0c5ac1fb76a2779e927f7e38f88137f
        with:
          pollingTimeoutSec: 600
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  build-and-verify:
    runs-on: ubuntu-latest
    needs: [lint, test, security-scan, sonarqube]
    steps:
      - uses: actions/checkout@85e6279cec87321a52edac9c87bce653a07cf6c2

      - uses: actions/setup-python@d0b4fc497a1daddb64da40799d80949aa3a0c559
        with:
          python-version: '3.11'

      - name: Build Docker image
        run: docker build -t hivebox:test .

      - name: Install package
        run: pip install .

      - name: Test version endpoint
        run: |
          docker run -d -p 8000:8000 --name hivebox-test hivebox:test
          sleep 5
          EXPECTED_VERSION=$(python -c "from hivebox import __version__; print(__version__)")
          VERSION=$(curl -s http://localhost:8000/version | python -c "import sys, json; print(json.load(sys.stdin)['hivebox'])")
          if [ "$VERSION" != "$EXPECTED_VERSION" ]; then
            echo "Version mismatch: API returned $VERSION but package version is $EXPECTED_VERSION"
            exit 1
          fi
